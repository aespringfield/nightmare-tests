name: Tests
on:
  pull_request:
    branches:
      - '*'
  push:
      branches:
        - main
jobs:
  test:
    runs-on: ubuntu-20.04
    services:
      postgres:
        image: postgres:10
        # The postgres container requires the postgres user to be setup with a password in order to start it due to security
        # reasons
        env:
          POSTGRES_PASSWORD: postgres
        ports: ['5432:5432']
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
    steps:
      - uses: actions/checkout@v2
      - name: Install Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0.3
          bundler-cache: true
      - name: Install Bundler
        run: gem install bundler:2.1.4
      - name: Install Node
        uses: actions/setup-node@v1
        with:
          node-version: 16.3.0
      - name: Setup the Rails application
        env:
          RAILS_ENV: test
        run: |
          sudo apt-get -yqq install libpq-dev
          bundle install --no-deployment --jobs 4 --retry 3
          cp config/database.github.yml config/database.yml
          bundle exec rails db:create
          bundle exec rails db:migrate
          yarn --frozen-lockfile
      - name: Run Ruby unit tests
        run: bundle exec rspec
      - name: Run JavaScript unit tests
        run: yarn jest app/javascript
      - name: Run Rubocop
        run: bundle exec rubocop --force-exclusion --cache false
      - name: Run ESLint
        run: yarn run eslint app/javascript --ext .js,.jsx
      - name: Archive test screenshots
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-failure-screenshots
          path: |
            tmp/screenshots/*.png
            tmp/capybara/*.png
  steps:
    - name: Notify finish deploy to Rollbar
      uses: rollbar/github-deploy-action@2.1.1
      id: rollbar_post_deploy
      with:
        environment: 'production'
        version: ${{ github.sha }}
        status: 'succeeded'
      env:
        ROLLBAR_ACCESS_TOKEN: ${{ secrets.ROLLBAR_ACCESS_TOKEN }}
        ROLLBAR_USERNAME: ${{ github.actor }}
        DEPLOY_ID: ${{ steps.rollbar_pre_deploy.outputs.deploy_id }}

